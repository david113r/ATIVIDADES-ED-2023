#include<stdio.h>

struct No {

    int valor;
    No *prox;

    No() {
        valor = 0;
        prox = NULL;
    }

    No(int _valor) {
        valor = _valor;
        prox = NULL;
    }

};

struct Lista {

    No *inicio, *fim;
    int n;

    Lista() {
        inicio = NULL;
        fim = NULL;
        n = 0;
    }

    bool vazia() { // O(1)
        return inicio == NULL;
    }

    void inserirInicio(int valor) { // O(1)

        n++;
        No *novo = new No(valor);

        if (vazia()) {
            inicio = novo;
            fim = novo;
            return;
        }

        novo->prox = inicio;
        inicio = novo;

    }

    void inserirFinal(int valor) { // O(1)

        n++;
        No *novo = new No(valor);

        if (vazia()) {
            inicio = novo;
            fim = novo;
            return;
        }

        fim->prox = novo;
        fim = novo;

    }

    void imprimir() { // O(n)

        No *aux = inicio;

        while (aux != NULL) {
            printf("%d -> ", aux->valor);
            aux = aux->prox;
        }

        printf("\n");

    }

    int tamanho() { // O(1)
        return n;
    }

    void removerInicio() { // O(1)

        if (tamanho() <= 1) {
            delete(inicio);
            inicio = NULL;
            fim = NULL;
            n = 0;
            return;
        }

        No *remover = inicio;
        inicio = inicio->prox;
        delete(remover);
        n--;
    }

    void removerFinal() { // O(n)

        if (tamanho() <= 1) {
            delete(inicio);
            inicio = NULL;
            fim = NULL;
            n = 0;
            return;
        }

        No *penultimo = inicio;
        while (penultimo->prox != fim) {
            penultimo = penultimo->prox;
        }
        delete(fim);
        penultimo->prox = NULL;
        fim = penultimo;
        n--;

    }

    void inserir(int valor, int pos) { // O(n)

        if (pos >= tamanho()) {
            inserirFinal(valor);
            return;
        }

        if (pos < 1) {
            inserirInicio(valor);
            return;
        }

        No *aux1 = inicio;
        for (int i = 0; i < pos - 1; i++) {
            aux1 = aux1->prox;
        }
        No *aux2 = aux1->prox;

        No *novo = new No(valor);
        aux1->prox = novo;
        novo->prox = aux2;
        n++;
    }

    void remover(int pos) { // O(n)

        if (pos <= 1) {
            removerInicio();
            return;
        }

        if (pos >= tamanho()) {
            removerFinal();
            return;
        }

        No *aux1 = inicio;
        for (int i = 0; i < pos - 2; i++) {
            aux1 = aux1->prox;
        }
        No *remover = aux1->prox;
        No *aux2 = remover->prox;
        aux1->prox = aux2;
        delete(remover);
        n--;

    }

    int questao1(){
        int n;
        No *aux=inicio;

       printf("\nDigite a quantidade de numeros a ser removidos:");
       scanf("%d",&n);

       for(int i=0;i<n;i++)
        {
            removerFinal();

       }



       }

       int questao2(){

       No* aux;
       No* segundo;

       if(tamanho()<=1){


        return 0;

       }


       aux=inicio->prox;
       inicio->prox=aux->prox;
       delete(aux);

       n--;

       }

    void questao4() {
        int x;

        printf("\nDigite N:");
        scanf("%d",&x);


        for (int i = 1; i <= x; i++) {
            inserirFinal(i);
        }
    }


        void questao5(int x) {
        if (tamanho() > 1) {
            No *penultimo = inicio;
            while (penultimo->prox != fim) {
                penultimo = penultimo->prox;
            }
            No *novo = new No();
            novo->valor = x;
            novo->prox = fim;
            penultimo->prox = novo;
        }
    }





};

int main() {

    int x;
    int elemento;

    Lista l;

    l.inserirInicio(10);
    l.inserirInicio(5);
    l.inserirInicio(8);
    l.inserirFinal(7);
    l.inserirFinal(3);
    l.inserir(13, 2);
    l.inserir(0, 0);
    l.inserir(50, 50);

    l.imprimir();

    printf("Escolha a questao para visualizar a resposta:");
    scanf("%d",&x);

    if(x==1){

        l.questao1();

    }

    if(x==2){

        l.questao2();

    }

    if(x==3){

        printf("\no tamanho da lista e:%d",l.tamanho());
        return 0;

    }

    if(x==4){

        l.questao4();

    }

    if(x==5){

        printf("\ndigite o elemento a ser inserido:");
        scanf("%d",&elemento);

        l.questao5(elemento);

    }


    l.imprimir();



    return 0;
}
